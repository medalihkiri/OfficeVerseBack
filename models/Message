// models/Message.js
const mongoose = require('mongoose');

const MessageSchema = new mongoose.Schema({
  messageId: { type: String, required: true, unique: true }, // idempotent
  room: { type: mongoose.Schema.Types.ObjectId, ref: 'Room', index: true }, // optional for private
  senderId: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },
  senderName: { type: String, required: true },
  text: { type: String, required: true, maxlength: 5000 },
  createdAt: { type: Date, default: Date.now, index: true },

  // NEW private chat fields
  isPrivate: { type: Boolean, default: false, index: true },
  recipientId: { type: String, default: null, index: true } // Photon UserId or ActorNumber
}, { versionKey: false });

MessageSchema.index({ room: 1, createdAt: -1 });
MessageSchema.index({ recipientId: 1, createdAt: -1 }); // fast private lookups

module.exports = mongoose.model('Message', MessageSchema);
