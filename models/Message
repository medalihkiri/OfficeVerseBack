const mongoose = require('mongoose');

const MessageSchema = new mongoose.Schema({
  messageId: { type: String, required: true, unique: true }, // client GUID to make saves idempotent
  room: { type: mongoose.Schema.Types.ObjectId, ref: 'Room', required: true, index: true },
  senderId: { type: mongoose.Schema.Types.ObjectId, ref: 'User' }, // optional for guests
  senderName: { type: String, required: true },                   // always store the name we display
  text: { type: String, required: true, maxlength: 5000 },
  createdAt: { type: Date, default: Date.now, index: true },
}, { versionKey: false });

MessageSchema.index({ room: 1, createdAt: -1 }); // fast “latest-first” pagination

module.exports = mongoose.model('Message', MessageSchema);
